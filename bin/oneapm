#!/usr/bin/env node
"use strict";

var child_process = require('child_process');
var chalk = require('chalk');
var debug = require('debug')('oneapm-master-pid.' + process.pid);

var createInjectedFile = require('../lib/CreateInjectedFile');

var argv = require('yargs')
  .usage('Usage: $0 <command> [options] filename')

  .command('start', 'Use oneapm to start an application')
  .example('start', 'oneapm start index.js')

  .demand(1)

  .default('host', '127.0.0.1', 'Dashboard server hostname')
  .default('port', 8088, 'Dashboard server port')

  .help('help')
  .describe('help', 'Show this message')

  .alias('p', 'port')
  .alias('H', 'host')
  .alias('h', 'help')
  .alias('v', 'version')

  .version(function () {
    return require('../package').version;
  })

  .epilog('Copyright 2015, OneAPM, Inc')
  .argv;

var port = argv.port;
var host = argv.host;

var fileName = argv._.pop();
var newFile = createInjectedFile(fileName);

var newProcess = child_process.spawn('node', [newFile], {
  env: require('util')._extend(process.env, {
    ONEAPM_MASRER_SERVER: 'ws://127.0.0.1:' + port + '/internal',
    ONEAPM_REPORTING_DURATION: 100,
    NODE_PATH: process.env.NODE_PATH + ":" + require('path').join(__dirname, '..', 'node_modules')
  }),
  stdio: 'inherit'
});

debug('child spawned pid=%d', newProcess.pid);
newProcess.on('close', function (exitCode) {
  process.exit(exitCode);
});

var server = require('../lib/MonitorServer.js')(newProcess);
require('../lib/FrontendServer')(server, newProcess);
require('../lib/InternalServer')(server, newProcess);

server.listen(port, host, function () {
  debug('Visit http://%s:%d to see the dashboard', host, port, newProcess.pid);
});